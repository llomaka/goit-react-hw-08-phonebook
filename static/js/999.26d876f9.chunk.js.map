{"version":3,"file":"static/js/999.26d876f9.chunk.js","mappings":"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","sources":["hooks/useSnackbar.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport default function useSnackbar() {\n  const [snackbar, setSnackbar] = useState({\n    'open': false,\n    'message': ''\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbar(prevState => {\n      return {\n        ...prevState,\n        'open': false,\n      }\n    });\n  };\n\n  const setMessage = (message) => setSnackbar(prevState => {\n    return {\n      'open': true,\n      'message': message,\n    }\n  })\n\n  return { open: snackbar.open, message: snackbar.message, setMessage, handleClose };\n}\n","import { useState, useId } from 'react';\nimport { authOperations, authSelectors } from 'redux/authorization';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, TextField, Link, Grid, Box, Typography, Container, Snackbar } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport useSnackbar from 'hooks/useSnackbar';\n\nexport default function RegisterForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const id = useId();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { open, message, setMessage, handleClose } = useSnackbar();\n  const isCreatingUser = useSelector(authSelectors.isCreatingUser);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(authOperations.createUser({ name, email, password }));\n    setMessage(`User ${name} is successfully created!`);\n    resetForm();\n    navigate('/contacts');\n  };\n\n  return (\n    <>\n      <Container component='div' maxWidth='xs'>\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h2' variant='h5'>\n            Sign up\n          </Typography>\n          <Box component='form' noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete='name'\n                  name='name'\n                  required\n                  fullWidth\n                  id={id + 'name'}\n                  label='Full Name'\n                  autoFocus\n                  type='text'\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  placeholder='Oleksandra Lomaka'\n                  onChange={handleInputChange}\n                  value={name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label='Email Address'\n                  autoComplete='email'\n                  type='email'\n                  name='email'\n                  title='Email address'\n                  id={id + 'email'}\n                  placeholder='olomaka@gmail.com'\n                  onChange={handleInputChange}\n                  value={email}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  label='Password'\n                  autoComplete='new-password'\n                  type='password'\n                  name='password'\n                  minLength={8}\n                  title='Password must be longer, than 8 characters, preferably contain at least one number and one uppercase character, not contain spaces and parentheses'\n                  id={id + 'password'}\n                  placeholder='pa$sw0rD'\n                  onChange={handleInputChange}\n                  value={password}\n                />\n              </Grid>\n            </Grid>\n            <LoadingButton\n              type='submit'\n              fullWidth\n              variant='contained'\n              sx={{ mt: 3, mb: 2 }}\n              onClick={handleSubmit}\n              loading={isCreatingUser}\n            >\n              Sign Up\n            </LoadingButton>\n            <Grid container justifyContent='flex-end'>\n              <Grid item>\n                <Link href='/goit-react-hw-08-phonebook/login' variant='body2'>\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n      <Snackbar autoHideDuration={1000} open={open} onClose={handleClose} message={message} />\n    </>\n  );\n};\n","import RegisterForm from 'components/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["useSnackbar","useState","snackbar","setSnackbar","open","message","setMessage","prevState","handleClose","event","reason","RegisterForm","name","setName","email","setEmail","password","setPassword","id","useId","dispatch","useDispatch","navigate","useNavigate","isCreatingUser","useSelector","authSelectors","handleInputChange","target","value","handleSubmit","preventDefault","authOperations","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","noValidate","onSubmit","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","label","autoFocus","type","pattern","title","placeholder","onChange","minLength","LoadingButton","mb","onClick","loading","justifyContent","Link","href","Snackbar","autoHideDuration","onClose","RegisterPage"],"sourceRoot":""}