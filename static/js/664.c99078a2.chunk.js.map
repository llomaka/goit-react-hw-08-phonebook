{"version":3,"file":"static/js/664.c99078a2.chunk.js","mappings":"gSACA,EAAuB,2BAAvB,EAA2D,6BAA3D,EAAgG,4BAAhG,EAAoI,4BAApI,EAAyK,6B,UCO1J,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAKC,EAAAA,EAAAA,SACLC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACD,SAATf,EACFC,EAAQc,GACU,UAATf,EACTG,EAASY,GACS,aAATf,GACTK,EAAYU,IAUVC,EAAY,mCAAG,WAAOH,GAAP,iEACnBA,EAAMI,iBACNT,EAASU,EAAAA,GAAAA,WAA0B,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAClDe,EAAAA,GAAAA,KAAA,eAAmBnB,EAAnB,8BARAC,EAAQ,IACRE,EAAS,IACTE,EAAY,IAQZK,EAAS,aALU,2CAAH,sDAQlB,OACE,+BACE,kBACEU,UAAWC,EACXC,aAAa,KACbC,SAAUP,EAHZ,WAKE,iBAAKI,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXG,QAASlB,EAAK,OAFhB,qBAKA,kBACEc,UAAWC,EACXI,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRtB,GAAIA,EAAK,OACTuB,YAAY,oBACZC,SAAUlB,EACVG,MAAOf,QAGX,iBAAKoB,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXG,QAASlB,EAAK,QAFhB,sBAKA,kBACEc,UAAWC,EACXI,KAAK,QACLzB,KAAK,QACL2B,MAAM,gBACNC,UAAQ,EACRtB,GAAIA,EAAK,QACTuB,YAAY,oBACZC,SAAUlB,EACVG,MAAOb,QAGX,iBAAKkB,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXG,QAASlB,EAAK,WAFhB,yBAKA,kBACEc,UAAWC,EACXI,KAAK,WACLzB,KAAK,WACL+B,UAAW,EACXJ,MAAM,0IACNC,UAAQ,EACRtB,GAAIA,EAAK,WACTuB,YAAY,WACZC,SAAUlB,EACVG,MAAOX,QAGX,mBACEgB,UAAWC,EACXI,KAAK,SACLzB,KAAK,gBAHP,2BCrGO,SAASgC,IACtB,OACE,iCACE,SAACC,EAAA,EAAD,CAAQC,KAAK,gCACb,SAACpC,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"fields\":\"RegisterForm_fields__pz+7B\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"button\":\"RegisterForm_button__B3hFq\"};","import { useState, useId } from 'react';\nimport { authOperations } from 'redux/authorization';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n// import ClipLoader from \"react-spinners/ClipLoader\";\nimport styles from './RegisterForm.module.css';\n\nexport default function RegisterForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const id = useId();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(authOperations.createUser({ name, email, password }));\n    toast.info(`User ${name} is successfully created!`);\n    resetForm();\n    navigate('/contacts');\n  };\n\n  return (\n    <>\n      <form\n        className={styles.form}\n        autoComplete='on'\n        onSubmit={handleSubmit}\n      >\n        <div className={styles.fields}>\n          <label\n            className={styles.label}\n            htmlFor={id + 'name'}>\n            Name *\n          </label>\n          <input\n            className={styles.input}\n            type='text'\n            name='name'\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={id + 'name'}\n            placeholder='Oleksandra Lomaka'\n            onChange={handleInputChange}\n            value={name}\n          />\n        </div>\n        <div className={styles.fields}>\n          <label\n            className={styles.label}\n            htmlFor={id + 'email'}>\n            Email *\n          </label>\n          <input\n            className={styles.input}\n            type='email'\n            name='email'\n            title='Email address'\n            required\n            id={id + 'email'}\n            placeholder='olomaka@gmail.com'\n            onChange={handleInputChange}\n            value={email}\n          />\n        </div>\n        <div className={styles.fields}>\n          <label\n            className={styles.label}\n            htmlFor={id + 'password'}>\n            Password *\n          </label>\n          <input\n            className={styles.input}\n            type='password'\n            name='password'\n            minLength={8}\n            title='Password must be longer, than 8 characters, contain at least one number and one uppercase character, not contain spaces and parentheses'\n            required\n            id={id + 'password'}\n            placeholder='pa$sw0rD'\n            onChange={handleInputChange}\n            value={password}\n          />\n        </div>\n        <button\n          className={styles.button}\n          type='submit'\n          name='submit_button'\n          // disabled={isLoading}\n        >\n          {/* {isLoading && <ClipLoader size={16} color='#fff' />} */}\n          {/* {!isLoading && <span>Register</span>} */}\n          Register\n        </button>\n      </form>\n      {/* {isSuccess && (<p>{JSON.stringify(data)}</p>)} */}\n    </>\n  );\n};\n","import Header from \"components/Header\";\nimport RegisterForm from \"components/RegisterForm\";\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <Header text='New User Registration Form' />\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["RegisterForm","useState","name","setName","email","setEmail","password","setPassword","id","useId","dispatch","useDispatch","navigate","useNavigate","handleInputChange","event","target","value","handleSubmit","preventDefault","authOperations","toast","className","styles","autoComplete","onSubmit","htmlFor","type","pattern","title","required","placeholder","onChange","minLength","RegisterPage","Header","text"],"sourceRoot":""}