{"version":3,"file":"static/js/870.e0152944.chunk.js","mappings":"kWAOe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAKC,EAAAA,EAAAA,SACLC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,iBAE9BC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACD,UAATD,EACFb,EAASc,GACS,aAATD,GACTX,EAAYY,IAIVC,EAAY,mCAAG,WAAOJ,GAAP,iEACnBA,EAAMK,iBACNX,EAASY,EAAAA,GAAAA,UAAyB,CAAElB,MAAAA,EAAOE,SAAAA,KAFxB,2CAAH,sDAKlB,OACE,SAACiB,EAAA,EAAD,CAAWC,UAAU,MAAMC,SAAS,KAApC,UACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,gBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYZ,UAAU,KAAKa,QAAQ,KAAnC,sBAGA,UAACX,EAAA,EAAD,CAAKF,UAAU,OAAOc,SAAUlB,EAAcO,GAAI,CAAEY,GAAI,GAAxD,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,gBACNC,aAAa,QACbC,WAAS,EACTC,KAAK,QACL7B,KAAK,QACL8B,MAAM,gBACNxC,GAAIA,EAAK,QACTyC,YAAY,oBACZC,SAAUnC,EACVI,MAAOf,KAET,SAACoC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,WACNC,aAAa,mBACbE,KAAK,WACL7B,KAAK,WACLiC,UAAW,EACXH,MAAM,0IACNxC,GAAIA,EAAK,WACTyC,YAAY,WACZC,SAAUnC,EACVI,MAAOb,KAET,SAAC8C,EAAA,EAAD,CACEC,QAASjC,EACT2B,KAAK,SACLJ,WAAS,EACTN,QAAQ,YACRV,GAAI,CAAEY,GAAI,EAAGe,GAAI,GACjBC,QAAS3C,EANX,sBAUA,SAAC4C,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,UACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACC,EAAA,EAAD,CAAMC,KAAK,uCAAuCxB,QAAQ,QAA1D,wDCrFC,SAASyB,IACtB,OACE,+BACE,SAAC5D,EAAD","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useState, useId } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from 'redux/authorization';\nimport { Avatar, TextField, Link, Grid, Box, Typography, Container } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const id = useId();\n  const dispatch = useDispatch();\n  const isSigningInUser = useSelector(authSelectors.isSigningInUser);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(authOperations.loginUser({ email, password }));\n  };\n\n  return (\n    <Container component='div' maxWidth='xs'>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h2' variant='h5'>\n          Sign in\n        </Typography>\n        <Box component='form' onSubmit={handleSubmit} sx={{ mt: 1 }}>\n          <TextField\n            margin='normal'\n            required\n            fullWidth\n            label='Email Address'\n            autoComplete='email'\n            autoFocus\n            type='email'\n            name='email'\n            title='Email address'\n            id={id + 'email'}\n            placeholder='olomaka@gmail.com'\n            onChange={handleInputChange}\n            value={email}\n          />\n          <TextField\n            margin='normal'\n            required\n            fullWidth\n            label='Password'\n            autoComplete='current-password'\n            type='password'\n            name='password'\n            minLength={8}\n            title='Password must be longer, than 8 characters, contain at least one number and one uppercase character, not contain spaces and parentheses'\n            id={id + 'password'}\n            placeholder='pa$sw0rD'\n            onChange={handleInputChange}\n            value={password}\n          />\n          <LoadingButton\n            onClick={handleSubmit}\n            type='submit'\n            fullWidth\n            variant='contained'\n            sx={{ mt: 3, mb: 2 }}\n            loading={isSigningInUser}\n          >\n            Sign In\n          </LoadingButton>\n          <Grid container justifyContent='flex-end'>\n            <Grid item>\n              <Link href='/goit-react-hw-08-phonebook/register' variant='body2'>\n                Don't have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import LoginForm from 'components/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","id","useId","dispatch","useDispatch","isSigningInUser","useSelector","authSelectors","handleInputChange","event","target","name","value","handleSubmit","preventDefault","authOperations","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","mt","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","type","title","placeholder","onChange","minLength","LoadingButton","onClick","mb","loading","Grid","container","justifyContent","item","Link","href","LoginPage"],"sourceRoot":""}