{"version":3,"file":"static/js/999.7ebc1cbc.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useState, useId } from 'react';\nimport { authOperations, authSelectors } from 'redux/authorization';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, TextField, Link, Grid, Box, Typography, Container, InputAdornment, IconButton } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport default function RegisterForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const id = useId();\n  const dispatch = useDispatch();\n  const isCreatingUser = useSelector(authSelectors.isCreatingUser);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(authOperations.createUser({ name, email, password }));\n  };\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  return (\n    <Container component='div' maxWidth='xs'>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h2' variant='h5'>\n          Sign up\n        </Typography>\n        <Box component='form' noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete='name'\n                name='name'\n                required\n                fullWidth\n                id={id + 'name'}\n                label='Full Name'\n                autoFocus\n                type='text'\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder='Oleksandra Lomaka'\n                onChange={handleInputChange}\n                value={name}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                label='Email Address'\n                autoComplete='email'\n                type='email'\n                name='email'\n                title='Email address'\n                id={id + 'email'}\n                placeholder='olomaka@gmail.com'\n                onChange={handleInputChange}\n                value={email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                label='Password'\n                autoComplete='new-password'\n                type={showPassword ? 'text' : 'password'}\n                name='password'\n                minLength={8}\n                title='Password must be longer, than 8 characters, preferably contain at least one number and one uppercase character, not contain spaces and parentheses'\n                id={id + 'password'}\n                placeholder='pa$sw0rD'\n                onChange={handleInputChange}\n                value={password}\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <LoadingButton\n            type='submit'\n            fullWidth\n            variant='contained'\n            sx={{ mt: 3, mb: 2 }}\n            onClick={handleSubmit}\n            loading={isCreatingUser}\n          >\n            Sign Up\n          </LoadingButton>\n          <Grid container justifyContent='flex-end'>\n            <Grid item>\n              <Link href='/goit-react-hw-08-phonebook/login' variant='body2'>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import RegisterForm from 'components/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["RegisterForm","useState","name","setName","email","setEmail","password","setPassword","id","useId","dispatch","useDispatch","isCreatingUser","useSelector","authSelectors","showPassword","setShowPassword","handleInputChange","event","target","value","handleSubmit","preventDefault","authOperations","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","noValidate","onSubmit","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","label","autoFocus","type","pattern","title","placeholder","onChange","minLength","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","LoadingButton","mb","loading","justifyContent","Link","href","RegisterPage"],"sourceRoot":""}