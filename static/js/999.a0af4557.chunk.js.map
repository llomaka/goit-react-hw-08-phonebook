{"version":3,"file":"static/js/999.a0af4557.chunk.js","mappings":"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","sources":["hooks/useSnackbar.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport default function useSnackbar() {\n  const [snackbar, setSnackbar] = useState({\n    'open': false,\n    'message': ''\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbar(prevState => {\n      return {\n        ...prevState,\n        'open': false,\n      }\n    });\n  };\n\n  const setOpen = () => setSnackbar(prevState => {\n    return {\n      ...prevState,\n      'open': true,\n    };\n  });\n\n  const setMessage = (message) => setSnackbar(prevState => {\n    return {\n      ...prevState,\n      'message': message,\n    }\n  })\n\n  return { open: snackbar.open, setOpen, message: snackbar.message, setMessage, handleClose };\n}\n","import { useState, useId } from 'react';\nimport { authOperations } from 'redux/authorization';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Snackbar from '@mui/material/Snackbar';\nimport useSnackbar from 'hooks/useSnackbar';\n\nconst theme = createTheme();\n\nexport default function RegisterForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const id = useId();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { open, message, setOpen, setMessage, handleClose } = useSnackbar();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(authOperations.createUser({ name, email, password }));\n    setMessage(`User ${name} is successfully created!`);\n    setOpen();\n    resetForm();\n    navigate('/contacts');\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h2\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete='name'\n                    name='name'\n                    required\n                    fullWidth\n                    id={id + 'name'}\n                    label='Full Name'\n                    autoFocus\n                    type='text'\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    placeholder='Oleksandra Lomaka'\n                    onChange={handleInputChange}\n                    value={name}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    label='Email Address'\n                    autoComplete='email'\n                    type='email'\n                    name='email'\n                    title='Email address'\n                    id={id + 'email'}\n                    placeholder='olomaka@gmail.com'\n                    onChange={handleInputChange}\n                    value={email}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    label='Password'\n                    autoComplete=\"new-password\"\n                    type='password'\n                    name='password'\n                    minLength={8}\n                    title='Password must be longer, than 8 characters, preferably contain at least one number and one uppercase character, not contain spaces and parentheses'\n                    id={id + 'password'}\n                    placeholder='pa$sw0rD'\n                    onChange={handleInputChange}\n                    value={password}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                onClick={handleSubmit}\n              >\n                Sign Up\n              </Button>\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  <Link href='/goit-react-hw-08-phonebook/login' variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n        <Snackbar autoHideDuration={1000} open={open} onClose={handleClose} message={message} />\n      </ThemeProvider>\n    </>\n  );\n};\n","import RegisterForm from \"components/RegisterForm\";\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["useSnackbar","useState","snackbar","setSnackbar","open","setOpen","prevState","message","setMessage","handleClose","event","reason","theme","createTheme","RegisterForm","name","setName","email","setEmail","password","setPassword","id","useId","dispatch","useDispatch","navigate","useNavigate","handleInputChange","target","value","handleSubmit","preventDefault","authOperations","ThemeProvider","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","noValidate","onSubmit","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","label","autoFocus","type","pattern","title","placeholder","onChange","minLength","Button","mb","onClick","justifyContent","Link","href","Snackbar","autoHideDuration","onClose","RegisterPage"],"sourceRoot":""}