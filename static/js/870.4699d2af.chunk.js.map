{"version":3,"file":"static/js/870.4699d2af.chunk.js","mappings":"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","sources":["hooks/useSnackbar.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport default function useSnackbar() {\n  const [snackbar, setSnackbar] = useState({\n    'open': false,\n    'message': ''\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbar(prevState => {\n      return {\n        ...prevState,\n        'open': false,\n      }\n    });\n  };\n\n  const setMessage = (message) => setSnackbar(prevState => {\n    return {\n      'open': true,\n      'message': message,\n    }\n  })\n\n  return { open: snackbar.open, message: snackbar.message, setMessage, handleClose };\n}\n","import { useState, useId } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { authOperations, authSelectors } from 'redux/authorization';\nimport useSnackbar from 'hooks/useSnackbar';\nimport { Snackbar, Avatar, TextField, Link, Grid, Box, Typography, Container } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const id = useId();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { open, message, setMessage, handleClose } = useSnackbar();\n  const isSigningInUser = useSelector(authSelectors.isSigningInUser);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    dispatch(authOperations.loginUser({ email, password }));\n    setMessage(`User with ${email} is successfully logged in!`);\n    resetForm();\n    navigate('/contacts');\n  };\n\n  return (\n    <>\n      <Container component='div' maxWidth='xs'>\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h2' variant='h5'>\n            Sign in\n          </Typography>\n          <Box component='form' onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n              margin='normal'\n              required\n              fullWidth\n              label='Email Address'\n              autoComplete='email'\n              autoFocus\n              type='email'\n              name='email'\n              title='Email address'\n              id={id + 'email'}\n              placeholder='olomaka@gmail.com'\n              onChange={handleInputChange}\n              value={email}\n            />\n            <TextField\n              margin='normal'\n              required\n              fullWidth\n              label='Password'\n              autoComplete='current-password'\n              type='password'\n              name='password'\n              minLength={8}\n              title='Password must be longer, than 8 characters, contain at least one number and one uppercase character, not contain spaces and parentheses'\n              id={id + 'password'}\n              placeholder='pa$sw0rD'\n              onChange={handleInputChange}\n              value={password}\n            />\n            <LoadingButton\n              onClick={handleSubmit}\n              type='submit'\n              fullWidth\n              variant='contained'\n              sx={{ mt: 3, mb: 2 }}\n              loading={isSigningInUser}\n            >\n              Sign In\n            </LoadingButton>\n            <Grid container justifyContent='flex-end'>\n              <Grid item>\n                <Link href='/goit-react-hw-08-phonebook/register' variant='body2'>\n                  Don't have an account? Sign Up\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n      <Snackbar autoHideDuration={1000} open={open} onClose={handleClose} message={message} />\n    </>\n  );\n}\n","import LoginForm from 'components/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["useSnackbar","useState","snackbar","setSnackbar","open","message","setMessage","prevState","handleClose","event","reason","LoginForm","email","setEmail","password","setPassword","id","useId","dispatch","useDispatch","navigate","useNavigate","isSigningInUser","useSelector","authSelectors","handleInputChange","target","name","value","handleSubmit","preventDefault","authOperations","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","mt","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","type","title","placeholder","onChange","minLength","LoadingButton","onClick","mb","loading","Grid","container","justifyContent","item","Link","href","Snackbar","autoHideDuration","onClose","LoginPage"],"sourceRoot":""}